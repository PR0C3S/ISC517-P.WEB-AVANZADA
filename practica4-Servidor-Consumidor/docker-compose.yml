#indica la version de Docker Compose utilizada
version: '3.8'
#Bloque de servicios, indica los contenedores a utilizar.
services:
  app-web:     #  #nombre del servicio
    #image: ${DK_USR}/practica4 #imagen utilizada si viene del registro.
    build: .
    ports:          #puertos que estaran expuestos.
      - "61616:61616"
      - ${PUERTO_APP}:8080
    env_file:
      - .env
    environment:    #variable de ambiente
      - NOMBRE_APP=$AMBIENTE
    networks:    #red para conectar los equipos.
      - red-app
    volumes:
      - mi-volumen-compose:/tmp/
    depends_on:   #indica que primero debe subir los servicios indicados.
      - base-datos-app-web
    command: bash -c "cd /app && java -jar consumidor.jar"

  base-datos-app-web:
    image: mysql:5.7.26
    ports:
      - ${PUERTO_DB}:3306
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=$DB_PASSWORD
      - MYSQL_USER=$DB_USER
      - MYSQL_DATABASE=$DB_NAME
    volumes:   #volumen de datos utilizado.
      - ~/dato_mysql_compose:/var/lib/mysql
    networks:
      - red-app

  phpmyadmin: # Cliente phpmyadmin para
    image: phpmyadmin:5.1.1
    env_file:
      - .env
    ports:
      - ${PUERTO_PHPMYADMIN}:80
    environment:
      - PMA_ARBITRARY=1
    networks:
      - red-app
    depends_on: #indica que primero debe subir los servicios indicados.
      - base-datos-app-web

  sensor1:
    build:
      context: ../practica4_PUBLICADOR
      dockerfile: Dockerfile
    ports: #puertos que estaran expuestos.
        - "8083:8080"
    networks:
      - red-app
    depends_on:
      - app-web
    command: bash -c "sleep 60 && cd /app && java -jar practica4-publicador.jar 1"

  sensor2:
    build:
      context: ../practica4_PUBLICADOR
      dockerfile: Dockerfile
    ports: #puertos que estaran expuestos.
      - "8084:8080"
    networks:
      - red-app
    depends_on:
      - app-web
    command: bash -c "sleep 60 && cd /app && java -jar practica4-publicador.jar 2"

networks:  #bloque para las redes
  red-app:   #indicando la red definida

volumes: #Bloque para definir los volumenes
  mi-volumen-compose:
